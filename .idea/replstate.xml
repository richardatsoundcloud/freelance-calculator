<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1487641083731">{:repl-history {:ide [], :local [&quot;(+ 7 8)&quot; &quot;(+ 3 4)&quot; &quot;(+ 9 8)&quot; &quot;(require '[cljs.spec :as spec])&quot; &quot;(use 'clojure.string)&quot; &quot;(require '[cljs.pprint :refer [pprint]])&quot; &quot;(pprint {:a 5})&quot; &quot;(println {:a 5})&quot; &quot;(spec/valid? int? 9)&quot; &quot;(spec/valid? even? 9)&quot; &quot;(spec/def :cljs.user/even-but-not-big? (spec/and even? #(&lt; % 10)))&quot; &quot;(s/valid? ::even-but-not-big? 11)&quot; &quot;(spec/valid? ::even-but-not-big? 11)&quot; &quot;(spec/valid? ::even-but-not-big? 10)&quot; &quot;(spec/valid? ::even-but-not-big? 8)&quot; &quot;(spec/valid? ::even-but-not-big? 5)&quot; &quot;(spec/explain ::even-but-not-big? 5)&quot; &quot;(spec/explain ::even-but-not-big? 12)&quot; &quot;(spec/def ::arg-list (spec/cat :name string? :age int?))&quot; &quot;(spec/valid? ::arg-list \n             [\&quot;Richard\&quot; 47])&quot; &quot;(spec/valid? ::arg-list \n             [\&quot;Richard\&quot; :47])&quot; &quot;(spec/conform ::arg-list [\&quot;Richard\&quot; :47])&quot; &quot;(spec/conform ::arg-list [\&quot;Richard\&quot; 47])&quot; &quot;(spec/def ::input (spec/or :parsed int? :unparsed string?))&quot; &quot;(spec/conform ::input 7)&quot; &quot;(spec/conform ::input \&quot;srtsrt\&quot;)&quot; &quot;(spec/conform ::input :rst)&quot;], :remote []}}</component>
</project>